Q1:
  某餐馆有n张桌子，每张桌子有一个参数：a 可容纳的最大人数； 有m批客人，每批客人有两个参数:b人数，c预计消费金额。 
在不允许拼桌的情况下，请实现一个算法选择其中一部分客人，使得总预计消费金额最大。	
 
  输入描述:

  输入包括m+2行。 第一行两个整数n(1 <= n <= 50000),m(1 <= m <= 50000) 第二行为n个参数a,即每个桌子可容纳的最大人数,
以空格分隔,范围均在32位int范围内。接下来m行，每行两个参数b,c。分别表示第i批客人的人数和预计消费金额,以空格分隔,范
围均在32位int范围内。

  输出描述:

  输出一个整数,表示最大的总预计消费金额
 
  输入例子1:
  3 5 2 4 2 1 3 3 5 3 7 5 9 1 10
  输出例子：
  20

Q2：
 给定一个有n个正整数的数组A和一个整数sum,求选择数组A中部分数字和为sum的方案数。
当两种选取方案有一个数字的下标不一样,我们就认为是不同的组成方案。 
 
  输入描述:

  输入为两行:
 第一行为两个正整数n(1 ≤ n ≤ 1000)，sum(1 ≤ sum ≤ 1000)
 第二行为n个正整数A[i](32位整数)，以空格隔开。

 输出描述：

 输出所求的方案数。

  输入例子1:
   5 15 
   5 5 10 2 3
  输出例子1:
   4

Q3:
 C市现在要转移一批罪犯到D市，C市有n名罪犯，按照入狱时间有顺序，另外每个罪犯有一个罪行值，值越大罪越重。
现在为了方便管理，市长决定转移入狱时间连续的c名犯人，同时要求转移犯人的罪行值之和不超过t，问有多少种选择的方式？ 

 输入描述:

  第一行数据三个整数:n，t，c(1≤n≤2e5,0≤t≤1e9,1≤c≤n)，第二行按入狱时间给出每个犯人的罪行值ai(0≤ai≤1e9)


  输出描述:

  一行输出答案。

  输入例子1:

   3 100 2
   1 2 3

  
  输出例子1:

  2
